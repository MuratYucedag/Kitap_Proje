<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>